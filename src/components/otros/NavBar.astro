---
import ThemeToggle from "@/components/otros/ThemeToggle.astro";
interface Props {
  navItems: any;
  rutaLeng: string;
  ui: any;
}
const { navItems, rutaLeng, ui } = Astro.props;
const [, , label] = rutaLeng.split("/");
---

<header
  class="fixed top-0 z-10 flex items-center justify-end sm:justify-center w-full mx-auto mt-2"
>
  <!-- Navbar -->
  <nav
    id="navbar"
    class="hidden menu sm:flex sm:flex-wrap px-3 text-sm font-medium sm:rounded-full rounded-lg text-gray-600 dark:text-gray-200 justify-center items-center"
  >
    {
      navItems.map((link: Props["navItems"]) => (
        <a
          class="px-1 py-1 mb-2 mr-2 sm:mb-0 sm:mr-0 transition hover:text-yellow-500 dark:hover:text-yellow-400  sm:py-2 sm:px-3"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
    <a class="px-1 py-1 mb-2 mr-2 sm:mb-0 sm:mr-0 sm:py-2 sm:px-3"
      ><ThemeToggle ui={ui} /></a
    >
    <a
      href={rutaLeng}
      class="px-1 py-1 mb-2 mr-2 sm:mb-0 sm:mr-0 transition hover:text-yellow-500 dark:hover:text-yellow-400 sm:py-2 sm:px-3"
      >{label}</a
    >
  </nav>
  <!-- Botón para mostrar/ocultar el navbar en pantallas pequeñas -->
  <button
    id="toggleButton"
    class="block sm:hidden px-4 py-2 text-gray-600 hover:text-gray-900 transition"
  >
    <!-- Ícono de menú (puedes cambiarlo según tu preferencia) -->
    <svg
      class="w-8 h-8"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M4 6h16M4 12h16m-7 6h7"></path>
    </svg>
  </button>
</header>

<script>
  const navbar = document.getElementById("navbar");
  const toggleButton = document.getElementById("toggleButton");

  // Función para alternar la visibilidad del navbar
  function toggleNavbar() {
    navbar?.classList.toggle("hidden");
    toggleButton?.classList.toggle("open");
  }

  // Escuchar el clic en el botón de alternancia
  toggleButton?.addEventListener("click", toggleNavbar);
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        const id = entry.target.getAttribute("id");
        const link = document.querySelector(`.menu a[href="#${id}"]`);
        if (entry.isIntersecting) {
          link?.classList.add("text-yellow-500");
        } else {
          link?.classList.remove("text-yellow-500");
        }
      });
    },
    { rootMargin: "-30% 0px -70% 0px" }
  );

  const menuLinks = document.querySelectorAll(".menu a[href^='#']");

  menuLinks.forEach((menuLink) => {
    const hash = menuLink.getAttribute("href") ?? "";
    const target = document.querySelector(hash);
    if (target) {
      observer.observe(target);
    }
  });
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  button {
    animation: nav-shadown 1s linear both;
  }

  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur bg-gray-300/60 dark:bg-gray-800/60 ring-white/10;
    }
  }

  /* Estilo adicional para el botón de alternancia abierto */
  #toggleButton.open svg {
    transform: rotate(90deg);
  }
</style>
